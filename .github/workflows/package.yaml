name: Package

on:
  release:
    types: [created]

jobs:
  package:
    name: Package
    runs-on: ubuntu-20.04
    timeout-minutes: 5

    steps:
      - name: Package | Checkout
        uses: actions/checkout@v2

      - name: Package | Release
        id: release
        uses: tenhaus/get-release-or-tag@v2

      - name: Package | Setup
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
          include-prerelease: true

      - name: Package | Publish
        run: dotnet pack -c Release -o ./pack /p:Version=$VERSION $PROJECT
        env:
          PROJECT: src/AppAny.Quartz.EntityFrameworkCore.Migrations/AppAny.Quartz.EntityFrameworkCore.Migrations.csproj
          VERSION: ${{ steps.release.outputs.tag }}

      - name: Package | Publish | PostgreSQL
        run: dotnet pack -c Release -o ./pack /p:Version=$VERSION $PROJECT
        env:
          PROJECT: src/AppAny.Quartz.EntityFrameworkCore.Migrations.PostgreSQL/AppAny.Quartz.EntityFrameworkCore.Migrations.PostgreSQL.csproj
          VERSION: ${{ steps.release.outputs.tag }}

      - name: Package | Publish | MySQL
        run: dotnet pack -c Release -o ./pack /p:Version=$VERSION $PROJECT
        env:
          PROJECT: src/AppAny.Quartz.EntityFrameworkCore.Migrations.MySql/AppAny.Quartz.EntityFrameworkCore.Migrations.MySql.csproj
          VERSION: ${{ steps.release.outputs.tag }}

      - name: Package | Publish | SqlServer
        run: dotnet pack -c Release -o ./pack /p:Version=$VERSION $PROJECT
        env:
          PROJECT: src/AppAny.Quartz.EntityFrameworkCore.Migrations.SqlServer/AppAny.Quartz.EntityFrameworkCore.Migrations.SqlServer.csproj
          VERSION: ${{ steps.release.outputs.tag }}

      - name: Package | Push
        run: dotnet nuget push pack/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate
